Task dockerTag = task "dockerTag" {
    group "docker"
}

Task dockerPush = task "dockerPush" {
    group "docker"
}

tasks.register("clean", Delete) {
    group "docker"
    delete file("$buildDir/docker")
}

List<String> tags = [
        "11.0.10_9-jre-hotspot",
        "12.0.2_10-jre-hotspot",
        "13.0.2_8-jre-hotspot",
        "14.0.2_12-jre-hotspot",
        "15.0.2_7-jre-hotspot"
]

String timestamp = new Date().format('yyyyMMdd-HHmm')

tags.each { String tag ->

    File dockerBuildDir = file("$buildDir/docker/$tag")
    dockerBuildDir.mkdirs()

    String javaMajor = tag.split("\\.").first()

    TaskProvider<Task> dockerFileGen = tasks.register("dockerfileJava-$javaMajor") {
        group 'docker'

        String dockerfileContent = file("$projectDir/src/main/docker/template/Dockerfile").text.replace('${IMAGE_TAG}', tag)

        File dockerfile = new File(dockerBuildDir, 'Dockerfile')
        dockerfile.createNewFile()
        dockerfile.text = dockerfileContent
    }

    TaskProvider<Exec> dockerTagJava = tasks.register("dockerTagJava-$javaMajor", Exec) {
        group 'docker'
        dependsOn dockerFileGen

        workingDir dockerBuildDir

        executable "docker"
        args = ["build", "-t", "onstructive/java:${tag}-${timestamp}", "-t", "onstructive/java:${tag}-latest", "."]

        logging.captureStandardOutput LogLevel.INFO
        logging.captureStandardError LogLevel.ERROR
    }

    TaskProvider<Exec> dockerPushJava = tasks.register("dockerPushJava-$javaMajor", Exec) {
        group 'docker'
        dependsOn dockerTagJava

        workingDir dockerBuildDir

        executable "docker"
        args = ["push", "onstructive/java:${tag}-${timestamp}"]

        logging.captureStandardOutput LogLevel.INFO
        logging.captureStandardError LogLevel.ERROR
    }

    dockerTag.dependsOn << dockerTagJava
    dockerPush.dependsOn << dockerPushJava
}

